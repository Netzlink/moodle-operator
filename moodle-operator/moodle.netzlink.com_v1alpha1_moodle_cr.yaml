apiVersion: moodle.netzlink.com/v1alpha1
kind: Moodle
metadata:
  name: example-moodle
spec:
  # Default values copied from <project_dir>/helm-charts/moodle/values.yaml
  
  affinity: {}
  allowEmptyPassword: "yes"
  args: null
  command: null
  commonAnnotations: {}
  commonLabels: {}
  containerPorts:
    http: 8080
    https: 8443
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  existingSecret: null
  externalDatabase:
    database: bitnami_moodle
    host: null
    password: null
    port: 3306
    user: bn_moodle
  extraDeploy: []
  extraEnvVars: []
  extraEnvVarsCM: null
  extraEnvVarsSecret: null
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: null
  image:
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: null
    registry: docker.io
    repository: bitnami/moodle
    tag: 3.9.1-debian-10-r17
  ingress:
    annotations: {}
    certManager: false
    enabled: false
    hostname: drupal.local
    hosts: null
    secrets: null
    tls: null
  initContainers: []
  lifecycleHooks: null
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  mariadb:
    db:
      name: bitnami_moodle
      password: ""
      user: bn_moodle
    enabled: true
    master:
      persistence:
        accessModes:
        - ReadWriteOnce
        enabled: true
        existingClaim: null
        hostPath: null
        size: 8Gi
        storageClass: null
    replication:
      enabled: false
    rootUser:
      password: ""
  metrics:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      pullSecrets: null
      registry: docker.io
      repository: bitnami/apache-exporter
      tag: 0.8.0-debian-10-r117
    podAnnotations:
      prometheus.io/port: "9117"
      prometheus.io/scrape: "true"
  moodleEmail: user@example.com
  moodleSkipInstall: "no"
  moodleUsername: user
  nameOverride: null
  nodeSelector: {}
  persistence:
    accessMode: ReadWriteOnce
    enabled: true
    hostPath: null
    size: 8Gi
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 1
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
  service:
    externalTrafficPolicy: Cluster
    httpsPort: 443
    nodePorts:
      http: ""
      https: ""
    port: 80
    type: LoadBalancer
  sidecars: []
  tolerations: []
  updateStrategy:
    type: RollingUpdate
  
